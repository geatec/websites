{
	"version": 3,
	"file": "D:/activ_tosh/web/sites/transcrypt_new.org/static/__javascript__/all.mod.js",
	"sources": [
		"D:/activ_tosh/web/sites/transcrypt_new.org/static/all.py"
	],
	"sourcesContent": [
		"from base import *\n\nclass All:\n\tdef __init__ (self, subjectName):\n\t\tself.subjectName = subjectName\n\t\tself.subjectNames = ['home', 'documentation', 'download', 'contribute', 'gallery', 'live_edit']\n\t\t\n\t\t# The logo has menu index -1, the regular menu buttons start at 0\n\t\tself.menuIndex = self.subjectNames.index (self.subjectName) - 1\n\t\t\n\t\tself.landscapeButtonTexts = ['docs & demos', 'download', 'join | ask', 'gallery', 'live edit']\n\t\tself.portraitButtonTexts = ['docs', 'get', 'join', 'show', 'live']\n\t\n\t\t# Find general\n\t\t\n\t\tself.all = document.querySelector ('*')\n\t\tself.body = document.querySelector ('body')\n\t\tself.html = document.querySelector ('html')\t\t\n\t\tself.lanes = list (document.querySelectorAll ('.lane'))\n\t\n\t\t# Find fixed\n\t\t\n\t\tself.fixed = document.querySelector ('.fixed')\n\t\tself.logo = document.querySelector ('.fixed .logo')\n\t\tself.logoImage = document.querySelector ('.fixed .logo img')\n\t\tself.logoTitle = document.querySelector ('.fixed .logo .title')\n\t\tself.logoTitleSpans = list (document.querySelectorAll ('.fixed .logo .title span'))\n\t\tself.logoSubtitle = document.querySelector ('.fixed .logo .subtitle')\n\t\tself.forkMe = document.querySelector ('.fixed .fork-me')\n\t\tself.buttons = list (document.querySelectorAll ('.fixed .menu-bar .button'))\n\t\tself.buttonTexts = list (document.querySelectorAll ('.fixed .menu-bar .button .text'))\n\t\t\n\t\t# Find moving\n\t\t\n\t\tself.moving = document.querySelector ('.moving')\n\t\t\n\t\tif self.subjectName == 'home':\n\t\t\tself.splash = document.querySelector ('.moving .splash')\n\t\t\tself.announcementBar = document.querySelector ('.moving .announcement-bar')\n\t\t\tself.panorama = document.querySelector ('.moving .panorama')\n\t\t\tself.summaryDivs = list (document.querySelectorAll ('.moving .summary div'))\n\t\telif self.subjectName == 'live_edit':\n\t\t\tself.turtleFrame = document.querySelector ('.moving .turtle iframe')\n\t\t\n\t\tself.prompt = document.querySelector ('.moving .footer .prompt')\n\t\tself.share =  document.querySelector ('.moving .footer .share')\n\t\t\n\t\t# End fouc prevention\n\t\t\n\t\tself.html.style.visibility = 'visible'\n\n\t\t# Connect and set size\n\t\t\n\t\tself.onResize (self, True)\n\t\twindow.onresize = self.onResize\n\t\twindow.onscroll = self.onResize\t# Needed for iPhone, since size changes silently when scolling\n\t\t\n\t\t# Connect logo\n\t\t\n\t\tself.logo.onclick = lambda: self.onPressButton (-1)\n\t\t\n\t\t# Connect and color buttons\n\t\t\n\t\tfor index, button in enumerate (self.buttons):\n\t\t\tbutton.onmouseover = (lambda i: lambda: self.onHoverButton (i, True)) (index)\n\t\t\tbutton.onmouseout = (lambda i: lambda: self.onHoverButton (i, False)) (index)\n\t\t\tbutton.onclick = (lambda i: lambda: self.onPressButton (i)) (index)\n\t\t\tbutton.style.backgroundColor = middleGray if index == self.menuIndex else 'transparent'\n\t\t\t\n\t\t# Load listings\n\t\t\n\t\tfor editMode in ['htmlmixed', 'python', 'javascript']:\n\t\t\tfor code in list (document.querySelectorAll ('.code' '.{}'.format (editMode))):\n\t\t\t\teditor = CodeMirror.fromTextArea (code, {\n\t\t\t\t\t'mode': {\n\t\t\t\t\t\t'name': editMode,\n\t\t\t\t\t\t'version': 3,\n\t\t\t\t\t\t'singleLineStringErrors': False\n\t\t\t\t\t},\n\t\t\t\t\t'lineWrapping': True\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tcharWidth = editor.defaultCharWidth()\n\t\t\t\t\n\t\t\t\tdef renderLine (cm, line, elt):\n\t\t\t\t\tnonlocal charWidth;\n\t\t\t\t\toff = CodeMirror.countColumn (line.text, null, cm.getOption ('tabSize')) * charWidth\n\t\t\t\t\telt.style.textIndent = '-' + off + 'px'\n\t\t\t\t\telt.style.paddingLeft = (4 + off) + 'px'\t\t\t\t\n\t\t\t\t\t\n\t\t\t\teditor.on ('renderLine', renderLine)\n\t\t\t\t\n\t\t\t\teditor.setValue (indent (decodeTags (code.innerHTML)))\n\t\t\t\t# editor.refresh ()\t# Not needed with read-only content\n\t\t\t\t\t\t\t\n\tdef onResize (self, forceReorient):\t\t\n\t\tbodyStyle = window.getComputedStyle (self.body, null)\n\t\tself.windowWidth = int (bodyStyle.width [:-2])\n\t\tself.windowHeight = int (bodyStyle.height [:-2])\n\t\tself.windowArea = Math.sqrt (self.windowHeight * self.windowWidth)\n\t\t\n\t\tself.oldLandscape = self.landscape\n\t\tself.landscape = self.windowWidth > self.windowHeight\n\n\t\tif forceReorient or self.landscape != self.oldLandcape:\n\t\t\tself.reorient ()\n\t\t\tself.oldLandscape = self.landscape\n\t\n\t\t# All\n\t\t\n\t\tself.all.style.fontSize = (0.014 if self.landscape else 0.025) * self.windowArea\n\t\t\n\t\t# Fixed\n\t\n\t\tself.fixed.style.height = 0.15 * self.windowHeight\n\t\t\n\t\tself.logo.style.top = 0.01 * self.windowHeight\n\t\t\n\t\tself.logoImage.style.width = 0.08 * self.windowHeight\n\t\tself.logoImage.style.height = 0.08 * self.windowHeight\n\t\t\t\t\n\t\tself.logoTitle.style.left = 0.08 * self.windowHeight \n\t\tself.logoTitle.style.top = -0.01 * self.windowHeight\n\t\tself.logoTitle.style.fontSize = 0.06 * self.windowHeight\n\t\t\n\t\tfor logoTitleSpan in self.logoTitleSpans:\n\t\t\tlogoTitleSpan.style.marginRight = -0.02 * self.windowHeight\n\n\t\tself.logoSubtitle.style.left = 0.09 * self.windowHeight \n\t\tself.logoSubtitle.style.top = 0.055 * self.windowHeight \n\t\tself.logoSubtitle.style.fontSize = 0.021 * self.windowHeight\n\t\t\n\t\t# Moving\n\t\t\n\t\tself.moving.style.top = 0.15 * self.windowHeight\n\t\t\n\t\tif self.subjectName == 'home':\n\t\t\tself.splash.style.minHeight = 0.85 * self.windowHeight\n\t\t\tself.announcementBar.style.height = 0.04 * self.windowHeight\n\t\t\tself.panorama.style.height = 0.35 * self.windowHeight\n\t\t\t\n\t\t\tfor summaryDiv in self.summaryDivs:\n\t\t\t\tsummaryDiv.style.float = 'left' if self.landscape else 'top'\n\t\t\t\tsummaryDiv.style.width =  '29%' if self.landscape else '95%'\n\t\telif self.subjectName == 'live_edit':\n\t\t\tself.turtleFrame.style.height = 0.85 * self.windowHeight\n\t\t\t\n\tdef reorient (self):\n\t\t# All\n\n\t\tif self.landscape:\n\t\t\tfor lane in self.lanes:\n\t\t\t\tlane.style.width = '60%'\n\t\t\t\tlane.style.paddingLeft = '20%'\n\t\t\t\tlane.style.paddingRight = '20%'\n\t\t\t\t\n\t\t\tself.forkMe.style.visibility = 'visible' if self.windowHeight > 700 else 'hidden'\n\n\t\t\tfor index, buttonText in enumerate (self.buttonTexts):\n\t\t\t\tbuttonText.innerHTML = self.landscapeButtonTexts [index]\n\t\t\n\t\t\tself.prompt.style.left = 0\n\t\t\tself.prompt.style.top = 20\n\n\t\t\tself.share.style.left = None\n\t\t\tself.share.style.right = 0\n\t\t\tself.share.style.top = 20\n\t\telse:\n\t\t\tfor lane in self.lanes:\n\t\t\t\tlane.style.width = '94%'\n\t\t\t\tlane.style.paddingLeft = '3%'\n\t\t\t\tlane.style.paddingRight = '3%'\n\t\t\t\t\n\t\t\tself.forkMe.style.visibility = 'hidden'\n\n\t\t\tfor index, buttonText in enumerate (self.buttonTexts):\n\t\t\t\tbuttonText.innerHTML = self.portraitButtonTexts [index]\n\t\t\t\t\n\t\t\tself.prompt.style.left = 0\n\t\t\tself.prompt.style.top = 20\n\t\t\t\n\t\t\tself.share.style.left = 0\n\t\t\tself.share.style.right = None\n\t\t\tself.share.style.top = 50\n\t\t\n\tdef onHoverButton (self, menuIndex, state):\n\t\tif menuIndex != self.menuIndex:\n\t\t\tself.buttons [menuIndex] .style.backgroundColor = lightGray if state else 'transparent'\n\t\t\t\n\tdef onPressButton (self, menuIndex):\n\t\tself.menuIndex = menuIndex\n\t\twindow.location.href = self.subjectNames [self.menuIndex + 1]\t# Negative index means home page\n\t\t"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAIA;AAIA;AACA;AACA;AAIA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AAIA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}